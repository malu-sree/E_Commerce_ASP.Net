@model E_CommerceWebsite.Models.User
@{
    ViewData["Title"] = "Register";
    Layout = "~/Views/Shared/MainLayout.cshtml";
}

<style>
    .error-message {
        color: red;
        font-size: 0.9rem;
        margin-top: 4px;
    }
</style>


<link rel="stylesheet" href="~/css/register.css" />

<h1>SignUp Here</h1>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">
        @TempData["ErrorMessage"]
    </div>
}



@using (Html.BeginForm("Register", "User", FormMethod.Post, new { id = "registerForm" }))
{
    <div class="form-group">
        @Html.LabelFor(model => model.Name)
        @Html.TextBoxFor(model => model.Name, new { @class = "form-control", id = "Name" })
        @* @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" }) *@
        <span id="nameError" class="error-message"></span>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email)
        @Html.TextBoxFor(model => model.Email, new { @class = "form-control", id = "Email" })
        @* @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" }) *@
        <span id="emailError" class="error-message"></span>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PhoneNumber)
        @Html.TextBoxFor(model => model.PhoneNumber, new { @class = "form-control", id = "PhoneNumber" })
        @* @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" }) *@
        <span id="phoneError" class="error-message"></span>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Address)
        @Html.TextBoxFor(model => model.Address, new { @class = "form-control", id = "Address" })
        @* @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" }) *@
        <span id="addressError" class="error-message"></span>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Password)
        @Html.PasswordFor(model => model.Password, new { @class = "form-control", id = "Password" })
        @* @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" }) *@
        <span id="passwordError" class="error-message"></span>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ConfirmPassword)
        @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control", id = "ConfirmPassword" })
        @* @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" }) *@
        <span id="confirmPasswordError" class="error-message"></span>
    </div>

   

    @* <button type="submit" class="btn btn-primary">Register</button> *@
    <button type="submit" class="btn mt-2" style="
    background-color: #fd7e14; /* Orange color */
    color: white;
    font-size: 14px; /* Reduced font size */
    padding: 10px 16px; /* Adjusted padding */
    border-radius: 6px;
    border: none;
    cursor: pointer;
    transition: background-color 0.3s ease;">
        SignUp
    </button>

     <p class="mt-3"> 
         Already have an account? 
    <a asp-controller="User" asp-action="Login" style=" 
        color: #fd7e14; 
        text-decoration: none; 
      font-weight: bold; 
        transition: color 0.3s ease;"> 
            Login here 
         </a> 
     </p> 


}
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="~/js/validation.js"></script>

<script>
    $(document).ready(function () {
        /// <summary>
        /// Triggers when the email input field loses focus.
        /// Sends a GET request to the server to check if the entered email already exists.
        /// Displays an error message if the email is already taken.
        /// </summary>
        $("#Email").blur(function () {
            var email = $(this).val().trim();
            if (email !== "") {
                $.ajax({
                    url: '/User/IsEmailAvailable',
                    type: 'GET',
                    data: { email: email },
                    success: function (response) {
                        if (!response) {
                            $("#emailError").text("Email already exists.");
                        } else {
                            $("#emailError").text("");
                        }
                    },
                    error: function () {
                        $("#emailError").text("Error checking email.");
                    }
                });
            }
        });
    });
</script>

<script>
    $(document).ready(function () {
        /// <summary>
        /// Validates Name field on blur: ensures no numbers are entered.
        /// </summary>
        $("#Name").blur(function () {
            var name = $(this).val().trim();
            var nameRegex = /^[A-Za-z\s]+$/;
            if (name !== "" && !nameRegex.test(name)) {
                $("#nameError").text("Name should contain only letters.");
            } else {
                $("#nameError").text("");
            }
        });

        /// <summary>
        /// Validates Phone Number field on blur: ensures only digits are entered.
        /// </summary>
        $("#PhoneNumber").blur(function () {
            var phone = $(this).val().trim();
            var phoneRegex = /^[0-9]+$/;
            if (phone !== "" && !phoneRegex.test(phone)) {
                $("#phoneError").text("Phone number should contain only digits.");
            } else {
                $("#phoneError").text("");
            }
        });
    });
</script>